
=== File: clusters/prod-cluster/infrastructure/secrets/acme-dns-external-secret.yaml ===

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: acme-dns-credentials
  namespace: cert-manager
spec:
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: acme-dns-credentials
    creationPolicy: Owner
  data:
    - secretKey: acme-dns-credentials.json
      remoteRef:
        key: /acme-dns/credentials
=== File: clusters/prod-cluster/infrastructure/secrets/acme-dns-external-secret-numinia.yaml ===

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: acme-dns-credentials
  namespace: numinia
spec:
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: acme-dns-credentials
    creationPolicy: Owner
  data:
    - secretKey: acme-dns-credentials.json
      remoteRef:
        key: /acme-dns/credentials 
=== File: clusters/prod-cluster/infrastructure/secrets/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - secretstore.yaml
  - acme-dns-external-secret.yaml
  - acme-dns-external-secret-numinia.yaml
  - traefik-external-secret.yaml
  - serviceaccount.yaml
=== File: clusters/prod-cluster/infrastructure/secrets/traefik-external-secret.yaml ===

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: traefik-tls-secret
  namespace: traefik
spec:
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  target:
    name: traefik-tls
    creationPolicy: Owner
  data:
    - secretKey: tls.crt
      remoteRef:
        key: /traefik/tls-cert
    - secretKey: tls.key
      remoteRef:
        key: /traefik/tls-key
=== File: clusters/prod-cluster/infrastructure/secrets/serviceaccount.yaml ===

apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  namespace: flux-system
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::241533135482:role/numengames-prod-euw1-eks-external-secrets 
=== File: clusters/prod-cluster/infrastructure/secrets/secretstore.yaml ===

apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: aws-secrets-manager
spec:
  provider:
    aws:
      service: SecretsManager
      region: eu-west-1
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa
            namespace: flux-system
=== File: clusters/prod-cluster/infrastructure/networking/aws-load-balancer-controller/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: kube-system
resources:
  - namespace.yaml
  - helmrelease.yaml 
=== File: clusters/prod-cluster/infrastructure/networking/aws-load-balancer-controller/helmrelease.yaml ===

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: aws-load-balancer-controller
  namespace: kube-system
spec:
  interval: 5m
  chart:
    spec:
      chart: aws-load-balancer-controller
      version: "1.7.1"
      sourceRef:
        kind: HelmRepository
        name: eks
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    clusterName: numengames-prod-euw1-eks
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::241533135482:role/numengames-prod-euw1-eks-aws-load-balancer-controller
    region: eu-west-1
    vpcId: vpc-0b84203ce67a9f154
=== File: clusters/prod-cluster/infrastructure/networking/aws-load-balancer-controller/namespace.yaml ===

apiVersion: v1
kind: Namespace
metadata:
  name: kube-system
=== File: clusters/prod-cluster/infrastructure/networking/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  # Load balancer controller must be first as it's required by Traefik
  - aws-load-balancer-controller
  - traefik 
=== File: clusters/prod-cluster/infrastructure/networking/traefik/dns-route.yaml ===

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteUDP
metadata:
  name: acme-dns-udp
  namespace: traefik
spec:
  entryPoints:
    - dns-udp
  routes:
    - services:
        - name: auth-numinia-xyz
          port: 53
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteTCP
metadata:
  name: acme-dns-tcp
  namespace: traefik
spec:
  entryPoints:
    - dns-tcp
  routes:
    - match: HostSNI(`*`)
      services:
        - name: auth-numinia-xyz
          port: 53 
=== File: clusters/prod-cluster/infrastructure/networking/traefik/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: traefik
resources:
  - namespace.yaml
  - helmrelease.yaml
  - dns-proxy.yaml
  - dns-route.yaml 
=== File: clusters/prod-cluster/infrastructure/networking/traefik/helmrelease.yaml ===

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: traefik
  namespace: traefik
spec:
  interval: 5m
  chart:
    spec:
      chart: traefik
      version: "24.0.0"
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: flux-system
  install:
    createNamespace: true
    crds: Create
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  values:
    deployment:
      kind: DaemonSet
    podSecurityContext:
      fsGroup: 65532
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        drop: []
        add:
          - NET_BIND_SERVICE
      runAsGroup: 0
      runAsNonRoot: false
      runAsUser: 0
    service:
      enabled: true
      type: LoadBalancer
      externalTrafficPolicy: Local
      loadBalancerClass: service.k8s.aws/nlb
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "external"
        service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "instance"
        service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
        service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
        service.beta.kubernetes.io/aws-load-balancer-name: "prod-numinia-traefik-nlb"
        service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "Name=prod-numinia-traefik-nlb"
    ports:
      web:
        port: 80
        expose: true
        exposedPort: 80
        protocol: TCP
      websecure:
        port: 443
        expose: true
        exposedPort: 443
        protocol: TCP
      dns-udp:
        port: 53
        expose: true
        exposedPort: 53
        protocol: UDP
        appProtocol: dns-udp
        containerPort: 53
        hostPort: 53
      dns-tcp:
        port: 53
        expose: true
        exposedPort: 53
        protocol: TCP
        appProtocol: dns-tcp
        containerPort: 53
        hostPort: 53
    providers:
      kubernetesCRD:
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true
      kubernetesIngress:
        enabled: true
        allowExternalNameServices: true
        publishedService:
          enabled: true
    additionalArguments:
      - "--providers.kubernetescrd"
      - "--providers.kubernetesingress.ingressclass=traefik"
      - "--entrypoints.dns-tcp.address=:53/tcp"
      - "--entrypoints.dns-udp.address=:53/udp"
=== File: clusters/prod-cluster/infrastructure/networking/traefik/namespace.yaml ===

apiVersion: v1
kind: Namespace
metadata:
  name: traefik 
=== File: clusters/prod-cluster/infrastructure/networking/traefik/dns-proxy.yaml ===

apiVersion: v1
kind: Service
metadata:
  name: auth-numinia-xyz
  namespace: traefik
spec:
  type: ExternalName
  externalName: acme-dns-dns.cert-manager.svc.cluster.local
  ports:
    - name: dns-udp
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53 
=== File: clusters/prod-cluster/infrastructure/networking/traefik/values.yaml ===

service:
  enabled: true
  type: LoadBalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "instance"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "kubernetes.io/cluster/prod-cluster=owned"
  spec:
    loadBalancerClass: service.k8s.aws/nlb
    externalTrafficPolicy: Local 
=== File: clusters/prod-cluster/infrastructure/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  # 1. Base infrastructure components (helm-repos, csi-drivers, cert-manager)
  - base
  # 2. Networking components (load-balancer, traefik)
  - networking
  # 3. Infrastructure applications (acme-dns, keda)
  - applications
  # 4. Secrets
  - secrets 
=== File: clusters/prod-cluster/infrastructure/applications/acme-dns/deployment.yaml ===

apiVersion: apps/v1
kind: Deployment
metadata:
  name: acme-dns
  namespace: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: acme-dns
  template:
    metadata:
      labels:
        app: acme-dns
    spec:
      containers:
      - name: acme-dns
        image: joohoi/acme-dns:v1.0
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 80
          name: api
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/acme-dns
        - name: storage
          mountPath: /var/lib/acme-dns
      volumes:
      - name: config
        configMap:
          name: acme-dns
      - name: storage
        emptyDir: {} 
=== File: clusters/prod-cluster/infrastructure/applications/acme-dns/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: cert-manager
resources:
  - configmap.yaml
  - deployment.yaml
  - service.yaml
  - ingressroute.yaml
=== File: clusters/prod-cluster/infrastructure/applications/acme-dns/ingressroute.yaml ===

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: acme-dns-api
  namespace: cert-manager
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`auth.numinia.xyz`)
      kind: Rule
      services:
        - name: acme-dns-api
          port: 80 
=== File: clusters/prod-cluster/infrastructure/applications/acme-dns/service.yaml ===

apiVersion: v1
kind: Service
metadata:
  name: acme-dns-api
  namespace: cert-manager
spec:
  type: ClusterIP
  ports:
  - port: 80
    name: api
    protocol: TCP
    targetPort: api
  selector:
    app: acme-dns
---
apiVersion: v1
kind: Service
metadata:
  name: acme-dns-dns
  namespace: cert-manager
spec:
  type: ClusterIP
  ports:
  - port: 53
    name: dns
    protocol: UDP
    targetPort: dns
  - port: 53
    name: dns-tcp
    protocol: TCP
    targetPort: dns-tcp
  selector:
    app: acme-dns
---
apiVersion: v1
kind: Service
metadata:
  name: auth-numinia-xyz
  namespace: traefik
spec:
  type: ExternalName
  externalName: acme-dns-dns.cert-manager.svc.cluster.local
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP 
=== File: clusters/prod-cluster/infrastructure/applications/acme-dns/configmap.yaml ===

apiVersion: v1
kind: ConfigMap
metadata:
  name: acme-dns
  namespace: cert-manager
data:
  config.cfg: |
    [general]
    listen = "0.0.0.0:53"
    protocol = "both"
    domain = "auth.numinia.xyz"
    nsname = "auth.numinia.xyz"
    nsadmin = "admin.numinia.xyz"
    
    [api]
    api_domain = "auth.numinia.xyz"
    ip = "0.0.0.0"
    port = "80"
    tls = "none"
    corsorigins = ["*"]
    use_header = false

    [database]
    engine = "sqlite3"
    connection = "/var/lib/acme-dns/acme-dns.db"

    [logconfig]
    loglevel = "debug"
    logtype = "stdout"
    logformat = "text" 
=== File: clusters/prod-cluster/infrastructure/applications/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  # ACME DNS must be first as it's required for certificate management
  - acme-dns
  - keda 
=== File: clusters/prod-cluster/infrastructure/applications/keda/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: keda
resources:
  - namespace.yaml
  - helmrelease.yaml 
=== File: clusters/prod-cluster/infrastructure/applications/keda/helmrelease.yaml ===

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: keda
  namespace: keda
spec:
  interval: 5m
  chart:
    spec:
      chart: keda
      version: "2.12.0"
      sourceRef:
        kind: HelmRepository
        name: kedacore
        namespace: flux-system
  install:
    createNamespace: true
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    crds:
      install: true 
=== File: clusters/prod-cluster/infrastructure/applications/keda/namespace.yaml ===

apiVersion: v1
kind: Namespace
metadata:
  name: keda 
=== File: clusters/prod-cluster/infrastructure/applications/keda/gitrepository.yaml ===

apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: keda
  namespace: flux-system
spec:
  interval: 1h
  url: https://github.com/kedacore/keda
  ref:
    tag: v2.12.0 
=== File: clusters/prod-cluster/infrastructure/base/helm-repositories/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - repositories.yaml 
=== File: clusters/prod-cluster/infrastructure/base/helm-repositories/repositories.yaml ===

apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: eks
  namespace: flux-system
spec:
  interval: 1h
  url: https://aws.github.io/eks-charts

---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: jetstack
  namespace: flux-system
spec:
  interval: 1h
  url: https://charts.jetstack.io

---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: kedacore
  namespace: flux-system
spec:
  interval: 1h
  url: https://kedacore.github.io/charts

---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: traefik
  namespace: flux-system
spec:
  interval: 1h
  url: https://traefik.github.io/charts

---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: secrets-store-csi-driver
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts

---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: aws-secrets-manager
  namespace: flux-system
spec:
  interval: 1h
  url: https://aws.github.io/secrets-store-csi-driver-provider-aws

---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: aws-efs-csi-driver
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes-sigs.github.io/aws-efs-csi-driver/

---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: external-secrets
  namespace: flux-system
spec:
  interval: 1h
  url: https://charts.external-secrets.io
=== File: clusters/prod-cluster/infrastructure/base/secrets-store-csi-driver/aws-provider.yaml ===

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: secrets-store-csi-driver-provider-aws
  namespace: kube-system
spec:
  interval: 5m
  chart:
    spec:
      chart: secrets-store-csi-driver-provider-aws
      version: "0.3.4"
      sourceRef:
        kind: HelmRepository
        name: aws-secrets-manager
        namespace: flux-system
  values:
    secrets-store-csi-driver:
      install: false
    aws:
      region: eu-west-1 
=== File: clusters/prod-cluster/infrastructure/base/secrets-store-csi-driver/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - helmrelease.yaml
  - aws-provider.yaml 
=== File: clusters/prod-cluster/infrastructure/base/secrets-store-csi-driver/helmrelease.yaml ===

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: secrets-store-csi-driver
  namespace: kube-system
spec:
  interval: 5m
  chart:
    spec:
      chart: secrets-store-csi-driver
      version: "1.4.0"
      sourceRef:
        kind: HelmRepository
        name: secrets-store-csi-driver
        namespace: flux-system
  values:
    syncSecret:
      enabled: true
    enableSecretRotation: true 
=== File: clusters/prod-cluster/infrastructure/base/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  # Helm repositories must be first as they are required by other components
  - helm-repositories
  # CSI Drivers and base operators
  - aws-efs-csi-driver
  - secrets-store-csi-driver
  - cert-manager
  - external-secrets 
=== File: clusters/prod-cluster/infrastructure/base/cert-manager/acme-dns/ingress.yaml ===

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: acme-dns
  namespace: cert-manager
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  rules:
  - host: "acme.numinia.xyz"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: acme-dns-api
            port:
              number: 80 
=== File: clusters/prod-cluster/infrastructure/base/cert-manager/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: cert-manager
resources:
  - namespace.yaml
  - helmrelease.yaml
  - issuers/cluster-issuer.yaml
  - issuers/numinia.yaml
  - acme-dns/ingress.yaml
=== File: clusters/prod-cluster/infrastructure/base/cert-manager/helmrelease.yaml ===

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  interval: 5m
  chart:
    spec:
      chart: cert-manager
      version: "v1.17.0"
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: flux-system
  install:
    createNamespace: true
    crds: Create
  upgrade:
    crds: CreateReplace
  values: {}
=== File: clusters/prod-cluster/infrastructure/base/cert-manager/namespace.yaml ===

apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager 
=== File: clusters/prod-cluster/infrastructure/base/cert-manager/issuers/cluster-issuer.yaml ===

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-dns01
spec:
  acme:
    email: tu-email@dominio.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-dns01-account-key
    solvers:
    - selector: {}
      dns01:
        acmeDNS:
          host: http://acme-dns-api.cert-manager.svc.cluster.local
          accountSecretRef:
            name: acme-dns-credentials
            key: acme-dns-credentials.json
        cnameStrategy: Follow
=== File: clusters/prod-cluster/infrastructure/base/cert-manager/issuers/numinia.yaml ===

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: numinia-cert
  namespace: numinia
spec:
  secretName: numinia-tls
  dnsNames:
    - "*.numinia.xyz"
    - "numinia.xyz"
  issuerRef:
    name: letsencrypt-dns01
    kind: ClusterIssuer

=== File: clusters/prod-cluster/infrastructure/base/aws-efs-csi-driver/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - helmrelease.yaml
  - storage-class.yaml 
=== File: clusters/prod-cluster/infrastructure/base/aws-efs-csi-driver/storage-class.yaml ===

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: efs-sc
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: fs-0f6c92fbfc4e4bb81
  directoryPerms: "700"
  gidRangeStart: "1000"
  gidRangeEnd: "2000" 
=== File: clusters/prod-cluster/infrastructure/base/aws-efs-csi-driver/helmrelease.yaml ===

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: aws-efs-csi-driver
  namespace: kube-system
spec:
  interval: 5m
  chart:
    spec:
      chart: aws-efs-csi-driver
      version: "2.5.2"
      sourceRef:
        kind: HelmRepository
        name: aws-efs-csi-driver
        namespace: flux-system
  values:
    controller:
      serviceAccount:
        create: true
        annotations:
          eks.amazonaws.com/role-arn: arn:aws:iam::241533135482:role/numengames-prod-euw1-eks-efs-csi-driver
=== File: clusters/prod-cluster/infrastructure/base/external-secrets/kustomization.yaml ===

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - namespace.yaml
  - helmrelease.yaml 
=== File: clusters/prod-cluster/infrastructure/base/external-secrets/helmrelease.yaml ===

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: external-secrets
  namespace: external-secrets
spec:
  interval: 5m
  chart:
    spec:
      chart: external-secrets
      version: "0.9.13"
      sourceRef:
        kind: HelmRepository
        name: external-secrets
        namespace: flux-system
  install:
    createNamespace: true
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    serviceAccount:
      create: true
      name: external-secrets-sa
    webhook:
      create: true 
=== File: clusters/prod-cluster/infrastructure/base/external-secrets/namespace.yaml ===

apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets
  labels:
    toolkit.fluxcd.io/tenant: infrastructure 
=== File: clusters/prod-cluster/flux-system/numinia.yaml ===

apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: numinia
  namespace: flux-system
spec:
  interval: 10m
  path: ./clusters/prod-cluster/organizations/numinia
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
  dependsOn:
    - name: infrastructure
      namespace: flux-system 
=== File: clusters/prod-cluster/flux-system/infrastructure.yaml ===

apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: infrastructure
  namespace: flux-system
spec:
  interval: 5m
  path: ./clusters/prod-cluster/infrastructure
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
  dependsOn:
    - name: flux-system
  wait: true
  timeout: 10m 