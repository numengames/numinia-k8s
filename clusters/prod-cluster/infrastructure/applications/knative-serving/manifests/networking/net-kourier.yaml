apiVersion: v1
kind: ServiceAccount
metadata:
  name: net-kourier
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: net-kourier
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-kourier
  labels:
    app.kubernetes.io/component: net-kourier
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "secrets", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["networking.internal.knative.dev"]
  resources: ["ingresses", "ingresses/status"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "ingresses/status"]
  verbs: ["get", "list", "watch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-kourier
  labels:
    app.kubernetes.io/component: net-kourier
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
subjects:
- kind: ServiceAccount
  name: net-kourier
  namespace: knative-serving
roleRef:
  kind: ClusterRole
  name: knative-kourier
  apiGroup: rbac.authorization.k8s.io
---
# Agregar un RoleBinding específico para el namespace knative-serving
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: knative-kourier-namespace
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: net-kourier
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
subjects:
- kind: ServiceAccount
  name: net-kourier
  namespace: knative-serving
roleRef:
  kind: ClusterRole
  name: knative-kourier
  apiGroup: rbac.authorization.k8s.io
---
# Añadir el ConfigMap config-kourier
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-kourier
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: net-kourier
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl get configmap -oyaml`

    # Specifies whether to use cluster local or ExternalDomains for services.
    # The valid values are "cluster.local" or "cluster.local,example.com".
    # If "cluster.local" is used, net-kourier will use the internal networking.
  cluster-domain: "cluster.local"
  # The domain template to use when creating domain names for services.
  domain-template: "{{.Name}}.{{.Namespace}}.{{.Domain}}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: net-kourier-controller-v2
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: net-kourier
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: net-kourier-controller-v2
  template:
    metadata:
      labels:
        app: net-kourier-controller-v2
        app.kubernetes.io/component: net-kourier
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: "1.11.0"
    spec:
      serviceAccountName: net-kourier
      containers:
      - name: controller
        image: gcr.io/knative-releases/knative.dev/net-kourier/cmd/kourier:v1.11.0
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kourier-gateway-v2
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: net-kourier
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kourier-gateway-v2
  template:
    metadata:
      labels:
        app: kourier-gateway-v2
        app.kubernetes.io/component: net-kourier
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: "1.11.0"
    spec:
      containers:
      - name: envoy
        image: docker.io/envoyproxy/envoy:v1.22.0
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http2
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        - name: admin
          containerPort: 9000
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kourier
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: net-kourier
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
spec:
  ports:
  - name: http2
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app: kourier-gateway-v2
  type: LoadBalancer 