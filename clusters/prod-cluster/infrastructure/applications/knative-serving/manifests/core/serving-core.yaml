apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-serving-controller
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces", "secrets", "configmaps", "endpoints", "services", "events", "serviceaccounts"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/finalizers", "replicasets"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "ingresses/status", "networkpolicies"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["serving.knative.dev"]
  resources: ["configurations", "revisions", "routes", "services"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["serving.knative.dev"]
  resources: ["configurations/status", "revisions/status", "routes/status", "services/status"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-serving-controller-admin
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
subjects:
- kind: ServiceAccount
  name: controller
  namespace: knative-serving
roleRef:
  kind: ClusterRole
  name: knative-serving-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: knative-serving-controller-admin-namespace
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
subjects:
- kind: ServiceAccount
  name: controller
  namespace: knative-serving
roleRef:
  kind: ClusterRole
  name: knative-serving-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-logging
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
data:
  loglevel.controller: "info"
  loglevel.autoscaler: "info"
  loglevel.webhook: "info"
  loglevel.activator: "info"
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-autoscaler
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: autoscaler
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
data:
  enable-scale-to-zero: "true"
  scale-to-zero-grace-period: "30s"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-network
  namespace: knative-serving
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/component: network
    app.kubernetes.io/version: "1.11.0"
data:
  ingress.class: "kourier.ingress.networking.knative.dev"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: activator-v2
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: activator
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: activator-v2
  template:
    metadata:
      labels:
        app: activator-v2
        app.kubernetes.io/component: activator
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: "1.11.0"
    spec:
      serviceAccountName: controller
      containers:
      - name: activator
        image: gcr.io/knative-releases/knative.dev/serving/cmd/activator:v1.11.0
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autoscaler-v2
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: autoscaler
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autoscaler-v2
  template:
    metadata:
      labels:
        app: autoscaler-v2
        app.kubernetes.io/component: autoscaler
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: "1.11.0"
    spec:
      serviceAccountName: controller
      containers:
      - name: autoscaler
        image: gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler:v1.11.0
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-v2
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: controller-v2
  template:
    metadata:
      labels:
        app: controller-v2
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: "1.11.0"
    spec:
      serviceAccountName: controller
      containers:
      - name: controller
        image: gcr.io/knative-releases/knative.dev/serving/cmd/controller:v1.11.0
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-v2
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook-v2
  template:
    metadata:
      labels:
        app: webhook-v2
        app.kubernetes.io/component: webhook
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: "1.11.0"
    spec:
      serviceAccountName: controller
      containers:
      - name: webhook
        image: gcr.io/knative-releases/knative.dev/serving/cmd/webhook:v1.11.0
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: WEBHOOK_NAME
          value: webhook
---
apiVersion: v1
kind: Service
metadata:
  name: activator-service
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: activator
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
spec:
  selector:
    app: activator-v2
  ports:
  - name: http1
    port: 80
    targetPort: 8012
  - name: http2
    port: 81
    targetPort: 8013
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: autoscaler
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: autoscaler
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
spec:
  selector:
    app: autoscaler-v2
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: controller
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
spec:
  selector:
    app: controller-v2
  ports:
  - name: http
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: webhook
  namespace: knative-serving
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.11.0"
spec:
  selector:
    app: webhook-v2
  ports:
  - name: https
    port: 443
    targetPort: 8443
  type: ClusterIP 